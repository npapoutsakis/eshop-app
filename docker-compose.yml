version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - default

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    ports:
      - "8097:8097"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8097,INTERNAL://kafka:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - default
    restart: on-failure
    healthcheck:
      test: ["CMD", "ping", "-c", "1", "localhost:8097"]
      interval: 30s
      timeout: 10s
      retries: 5

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    container_name: control_center
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    expose:
      - 9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:19092"
      CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021
    networks:
      - default
    restart: always

  postgres:
    container_name: keycloak-db
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - keycloak-postgres-network

  keycloak:
    image: jboss/keycloak
    restart: unless-stopped
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=postgres
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - keycloak-data:/opt/jboss/keycloak/standalone/data
    networks:
      - keycloak-postgres-network

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT:5050
    ports:
      - "5050:80"
    networks:
      - keycloak-postgres-network
      - products
      - orders
    depends_on:
      - products_db
      - orders_db
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - keycloak
    volumes:
      - ./frontend:/app

  products-service:
    build:
      context: ./backend/products
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend/products:/app
    depends_on:
      - products_db
    networks:
      - products

  products_db:
    container_name: products_db
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=products_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    ports:
      - "3310:5432"
    expose:
      - 3310
    networks:
      - products
    volumes:
      - products-db-data:/var/lib/postgresql/data

  orders-service:
    build:
      context: ./backend/orders
      dockerfile: Dockerfile
    ports:
      - "5500:5500"
    volumes:
      - ./backend/orders:/app
    depends_on:
      - orders_db
    networks:
      - orders

  orders_db:
    container_name: orders_db
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=orders_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    ports:
      - "3308:5432"
    expose:
      - 3308
    networks:
      - orders
    volumes:
      - orders-db-data:/var/lib/postgresql/data

volumes:
  postgres-data:
  keycloak-data:
  pgadmin-data:
  products-db-data:
  orders-db-data:
  frontend-app:

networks:
  default:
    driver: bridge
  keycloak-postgres-network:
  products:
  orders:
